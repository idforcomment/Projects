from selenium import webdriver
import time
from keep_alive import keep_alive
import pickle


options=webdriver.ChromeOptions()
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Safari/537.36")
options.add_argument("load-extension=ad-extension")


#options.add_argument("--headless")
driver=webdriver.Chrome(chrome_options=options)
driver.get("https://oauth.vk.com/authorize?client_id=5852328&display=popup&redirect_uri=https://ad-core.ru/oauth2callback.php&scope=65538&response_type=code&v=5.107&state=vk.0.9408f4bfb7aa61044445a2a614ce4563.go")

driver.find_element_by_name('email').send_keys('anasalam702@gmail.com')
driver.find_element_by_name('pass').send_keys('hcl@1234')
driver.find_element_by_id('install_allow').click()
#cookies=pickle.load(open("ad-core.pkl", "rb"))
#for cookie in cookies:
#  driver.add_cookie(cookie)


#input("Enter:- ")

#pickle.dump( driver.get_cookies() , open("ad-core.pkl","wb"))





def task():
  #driver.get("https://ad-core.ru/ads-vk-likes")

  try:
    driver.find_element_by_xpath('/html/body/div[5]/div/div[2]/div/a[2]').click()
  except:
    print('cant find banner')
    time.sleep(600)
    task()

  handles=driver.window_handles
  driver.switch_to.window(handles[1])

  url=driver.current_url

  if 'photo' in url:
    like=driver.find_element_by_xpath('//*[@id="pv_narrow"]/div[1]/div[1]/div/div/div[1]/div[3]/div/div/a[1]').get_attribute('class')

    if like=='like_btn like _like animate':
      driver.find_element_by_xpath('//*[@id="pv_narrow"]/div[1]/div[1]/div/div/div[1]/div[3]/div/div/a[1]').click()

    elif like=='like_btn like _like animate active':
      pass

  driver.close
  driver.switch_to.window(handles[0])
  driver.find_element_by_xpath('/html/body/div[5]/div/div[2]/div/a[2]/p[1]').click()





        
              
        


try:
  task()
except:
  print("task failed...")
  task() 



keep_alive()

while True:
  try:
    task()
  except:
    pass
